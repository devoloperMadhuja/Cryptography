#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define SWAP(a, b) { unsigned char temp = a; a = b; b = temp; }
void rc4_init(unsigned char *s, unsigned char *key, int key_length) {
int i, j = 0;
unsigned char k[256];
for (i = 0; i < 256; i++) {
s[i] = i;
k[i] = key[i % key_length];
}
for (i = 0; i < 256; i++) {
j = (j + s[i] + k[i]) % 256;
SWAP(s[i], s[j]);
}
}
void rc4_crypt(unsigned char *s, unsigned char *data, int data_length) {
int i = 0, j = 0, t, k;
for (k = 0; k < data_length; k++) {
i = (i + 1) % 256;
j = (j + s[i]) % 256;
SWAP(s[i], s[j]);
t = (s[i] + s[j]) % 256;
data[k] ^= s[t];
}
}
int main() {
unsigned char s[256];
unsigned char key[] = "Key";
unsigned char data[] = "Plaintext";
int key_length = strlen((char *)key);
int data_length = strlen((char *)data);
printf("Original data: %s\n", data);
rc4_init(s, key, key_length);
rc4_crypt(s, data, data_length);
printf("Encrypted data: ");
for (int i = 0; i < data_length; i++) {
printf("%02X", data[i]);
}
printf("\n");
// To decrypt, reinitialize the state and apply rc4_crypt again
rc4_init(s, key, key_length);
rc4_crypt(s, data, data_length);
printf("Decrypted data: %s\n", data);
return 0;
}
